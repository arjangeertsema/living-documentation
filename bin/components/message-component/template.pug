doctype html
html
  head
    meta(charset='UTF-8')
    title=data.title

    script.
      window.PagedConfig = {
        auto: false,
        after: (flow) => { 
          document.body.classList.add('pagedjs_previewed');
        }
      };

    script(src='https://unpkg.com/pagedjs/dist/paged.polyfill.js')

    style.
      if(data["font-faces"])
        each fontFace in data["font-faces"]
           @font-face {
              font-family: '{{family}}';
              src: 
                each source in fontFace.sources
                  url("{{url}}") format("{{format}}"),
              font-weight: {{weight}};
              font-style: {{style}};
            }
      | !{data.css}

    if(data.googleFont)
      link(rel='preconnect' href='https://fonts.googleapis.com')
      link(rel='preconnect' href='https://fonts.gstatic.com' crossorigin)
      link(href=data.googleFont rel='stylesheet')
    
  body
    article
      header
        div(class='logo')
          figure
            img(src=data.root + 'assets/images/message/logo.svg')
        
      footer
        div(class='contact')
          | !{data.footer}

      main
        if(data.to)
          div(class='address')
            address          
              | !{data.to}

        if(data.date)
          p(class='time')
            time=data.date

        if(data.references)
          dl(class='reference')
            each reference in data.references
              if(reference.value)
                dt=reference.name
                dd=reference.value            
        
        | !{data.message}
        
        if data.attachments
          attachments
            h3=data.locale.attachments
            ul
              each attachment in data.attachments
                li=attachment.name

    script.
      (() => {
        const calculateHeight = () => {
          const body = document.body, html = document.documentElement;

          return Math.max(
            body.scrollHeight,
            body.offsetHeight,
            html.clientHeight,
            html.scrollHeight,
            html.offsetHeight);
        };

        if(calculateHeight() === 0) {
          document.body.style.visibility = "hidden";
          
          const interval = setInterval(() => {
            if(calculateHeight() > 0) {
              window.clearInterval(interval);
              window.PagedPolyfill.preview();
              document.body.style.visibility = "visible";
            }
          }, 500);
        }
        else {
          window.PagedPolyfill.preview();
        }

        //Polyfill disturbes the iframe resizer, calculate height manually.      
        window.iFrameResizer = {
          heightCalculationMethod: () => { return calculateHeight(); }
        };
      })();
    
    script(src=data.root + 'assets/iframe-resizer-dist/iframeResizer.contentWindow.min.js' charset='UTF-8')
